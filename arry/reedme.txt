704.二分法查找 {
    给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。
    1. 二分法的前提：有序数组 和 无重复元素；
    2. 写二分法要注意区间的定义，可以分为左闭右闭和左闭右开，严格按照定义来写就不容易出错；
    3. 遇到题目要求搜索复杂度为o(logn)时，常常暗示二分查找法；
}
35.搜索插入位置{
    给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。请必须使用时间复杂度为 O(log n) 的算法。
    1.题目要求复杂度o(logn)考虑使用二分法。
    2.目标值不存在的情况需要插入（即low>high）此时有两种情况，时一种是因为low=mid+1导致，另一种是因为high=mid-1导致。而这两种请都是在在运行至low=high时发生的
        1）当因为low=mid+1导致查找失败时，目标值比最后比较的那个值要大，因此要插入在最后比较的那个值的后一个位置也就是low所在的位置
        2）当因为high=mid-1导致查找失败时，目标值比最后比较的那个值要小，因此要插入在high指向位置的后一个位置同样是low所在的位置
        3）综合以上两种情况当查找失败时，插入在low所在位置即可
}
27.移除元素{
    给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。
    双指针法：（时间复杂度O(n) 空间复杂度O(1)）
        1） 通过一个快指针和慢指针在一个for循环下完成两个for循环的工作。
        2） 慢指针表示下一个即将赋值的元素，快指针表示下一个即将处理的元素，这样[0,slowIndex)即表示不包含val的数组
        3） 当fastIndex指向元素等于val时，fastIndex++，lowIndex不变，
            当fastIndex指向元素不等于val时，将fastIndex指向的值放入lowIndex指向元素的值即可。
}
